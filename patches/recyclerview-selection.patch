diff --git a/app/src/main/java/androidx/recyclerview/selection/SelectionTracker.java b/app/src/main/java/androidx/recyclerview/selection/SelectionTracker.java
index 50cc4ceb7..910935a0a 100644
--- a/app/src/main/java/androidx/recyclerview/selection/SelectionTracker.java
+++ b/app/src/main/java/androidx/recyclerview/selection/SelectionTracker.java
@@ -503,7 +503,7 @@ public abstract class SelectionTracker<K> {
         private OnContextClickListener mOnContextClickListener;
 
         private BandPredicate mBandPredicate;
-        private int mBandOverlayId = R.drawable.selection_band_overlay;
+        private int mBandOverlayId = eu.faircode.email.R.drawable.selection_band_overlay;
 
         // TODO(b/144500333): Remove support for overriding gesture and pointer tooltypes.
         private int[] mGestureToolTypes = new int[]{
@@ -815,7 +815,11 @@ public abstract class SelectionTracker<K> {
                         @Override
                         public void run() {
                             if (mSelectionPredicate.canSelectMultiple()) {
-                                gestureHelper.start();
+                                try {
+                                    gestureHelper.start();
+                                } catch (Throwable ex) {
+                                    eu.faircode.email.Log.e(ex);
+                                }
                             }
                         }
                     },
diff --git a/app/src/main/java/androidx/recyclerview/selection/TouchInputHandler.java b/app/src/main/java/androidx/recyclerview/selection/TouchInputHandler.java
index be4c3fa0b..c434ced07 100644
--- a/app/src/main/java/androidx/recyclerview/selection/TouchInputHandler.java
+++ b/app/src/main/java/androidx/recyclerview/selection/TouchInputHandler.java
@@ -112,6 +112,11 @@ final class TouchInputHandler<K> extends MotionInputHandler<K> {
     }
 
     @Override
+    public boolean onDoubleTapEvent(MotionEvent e) {
+        return mSelectionTracker.hasSelection();
+    }
+
+    @Override
     public void onLongPress(@NonNull MotionEvent e) {
         if (DEBUG) {
             checkArgument(MotionEvents.isFingerEvent(e));
